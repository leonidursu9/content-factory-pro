require('dotenv').config();
const fetch = require('node-fetch');

async function rewriteScript(originalText) {
    try {
        const apiKey = process.env.YANDEX_API_KEY;
        const folderId = process.env.YC_FOLDER_ID;

        if (!apiKey || !folderId) {
            throw new Error('Yandex Cloud API Key or Folder ID is not configured in .env file.');
        }

        const masterPrompt = `
[РОЛЬ И МИССИЯ AI-ПРОДЮСЕРА]
Ты — AI-Продюсер и Мастер Адаптации контента, работающий строго по методологии "Контент-Завода". Твоя миссия: взять виральную идею конкурента и превратить ее в уникальный, готовый к съемке, продающий сценарий для коротких видео (Reels/Shorts) для рынка недвижимости Краснодара. Твоя личность: энергичный, экспертный стратег, который мыслит категориями виральности и лидогенерации.

[КЛЮЧЕВОЙ КОНТЕКСТ ЗАКАЗЧИКА]
1.  НИША: Частный риелтор. Фокус на Новостройках и Семейной Ипотеке (Семьи с детьми до 7 лет) в Краснодаре, крае и на побережье.
2.  УТП (Оффер): Покупка — это простой и прозрачный процесс, решение сложных ипотек и работа дистанционно (видеопоказы, электронные сделки).
3.  БОЛЬ ЦА: Страх долгостроя, обмана, скрытых платежей и сложностей с ипотекой (особенно при переезде/удаленной покупке).

[МЕТОДОЛОГИЯ АДАПТАЦИИ]
Твоя задача — провести АДАПТАЦИЮ виральной идеи (текст ниже) по следующим правилам:
1.  Начни с Хука: Создай сильный, провокационный Хук (1-3 сек.), который бьет прямо в БОЛЬ ЦА (например, "СТОП! Вы теряете 500 000 ₽!" или "Не покупайте этот ЖК, пока не посмотрите!").
2.  Интегрируй Ценность: Раскрой идею, но обязательно замени общие фразы на конкретные УТП Заказчика:
    * Если тема — финансы, упомяни Семейную ипотеку, МатКапитал или покупку без ПВ.
    * Если тема — страхи, упомяни прозрачность, видеопоказы и работу дистанционно.
3.  Закрой Ценностью: Финальная часть должна дать ясное решение проблемы и повысить доверие.
4.  Сформируй CTA: Заверши сильным, ясным Призывом к Действию (CTA), призывающим написать ключевое слово в Директ (например, "ПРОВЕРКА", "КАПИТАЛ", "24/7").

[ВХОДНЫЕ ДАННЫЕ]
ОРИГИНАЛЬНАЯ ВИРАЛЬНАЯ ИДЕЯ (из софта): 
${originalText}

[ФОРМАТ ВЫВОДА]
Выдай только готовый сценарий, используя следующую структуру:
**[Название Сценария: Краткий заголовок + Фокус на УТП]**
* **Хук (1-3 сек):** [Текст на экране + Действие]
* **Ценность/Адаптация (3-20 сек):** [Текст для озвучки + Визуальный ряд]
* **CTA (20+ сек):** [Текст на экране + Призыв к действию]
* **Идея для Монтажа:** [Указать трек/звук и ключевые моменты зума/срезки]
`;

        const body = {
            "modelUri": `gpt://${folderId}/yandexgpt-lite`,
            "completionOptions": {
                "stream": false,
                "temperature": 0.6,
                "maxTokens": "2000"
            },
            "messages": [
                {
                    "role": "user",
                    "text": masterPrompt.replace('${originalText}', originalText)
                }
            ]
        };

        console.log('[YandexGPT] Отправляю запрос к API...');
        const response = await fetch("https://llm.api.cloud.yandex.net/foundationModels/v1/completion", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Api-Key ${apiKey}`
            },
            body: JSON.stringify(body)
        });

        const data = await response.json();
        
        if (data.result && data.result.alternatives[0]) {
            console.log("[YandexGPT] Сценарий успешно переписан.");
            return data.result.alternatives[0].message.text;
        } else {
            console.error("[YandexGPT] Ошибка в ответе API:", data);
            throw new Error("Не удалось получить корректный ответ от YandexGPT");
        }
    } catch (error) {
        console.error("[YandexGPT] Критическая ошибка:", error);
        throw new Error("Не удалось переписать сценарий");
    }
}

module.exports = { rewriteScript };