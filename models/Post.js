const mongoose = require('mongoose');

const PostSchema = new mongoose.Schema({
    // üí° –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–û–õ–ï: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–æ–ª—É—á–∞–µ–º –æ—Ç –ø–∞—Ä—Å–µ—Ä–∞.
    mediaId: { type: String, required: true, unique: true }, 

    url: { type: String, required: true },
    caption: { type: String },
    
    // –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ—Å—Ç–∞
    likesCount: { type: Number, default: 0 },
    commentsCount: { type: Number, default: 0 },
    viewsCount: { type: Number, default: 0 },
    timestamp: { type: Date },

    // üí° –ì–õ–ê–í–ù–û–ï –ü–û–õ–ï –ê–ù–ê–õ–ò–¢–ò–ö–ò: –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –í–∏—Ä–∞–ª—å–Ω–æ—Å—Ç–∏
    viralCoefficient: { type: Number, default: 0 }, 
    
    // –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    author: { type: mongoose.Schema.Types.ObjectId, ref: 'Author', required: true },
    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },

    // –ò—Å—Ç–æ—Ä–∏—è –º–µ—Ç—Ä–∏–∫ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ö–í (—Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞)
    metricsHistory: [{
        views: Number,
        likes: Number,
        comments: Number,
        timestamp: { type: Date, default: Date.now }
    }],
    
});

module.exports = mongoose.model('Post', PostSchema);